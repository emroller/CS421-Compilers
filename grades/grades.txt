Learning Module               Outcome (points)                                                 Assessment (points)                              Outcome Score
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
1. Recursion                  1. Write a recursive function over integers (2)                  Recursion Activity problem 1                     100.00 (2)   
                              2. Write a mapping recursive function over lists (2)             Recursion Activity problem 2                     100.00 (2)   
                              3. Write a folding recursive function over lists (2)             Recursion Activity problem 3                     100.00 (2)   
                              4. Write a tail recursive function (2)                           Exam 1 - Tail Recursion problem 2                100.00 (2)   
                              5. Indicate an advantage of tail recursion over direct style (2) Exam 1 - Tail Recursion Advantage                x 0.00 (0)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
2. Algebraic Data Types       1. Write a datatype declaration (2)                              MP 1                                             100.00 (2)   
                              2. Consume a recursive datatype (2)                              ADT Activity                                     100.00 (2)   
                              3. Transform a recursive datatype (3)                            Exam 1 - ADTs q1                                 100.00 (3)   
                              4. Produce a recursive datatype (3)                              MP 1                                             100.00 (3)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
3. Higher Order Functions     1. Using HOFs (5)                                                Exam 1 - Using HOFs (version 3)                  100.00 (5)   
                              2. Writing HOFs (5)                                              Fixpoint Activity                                100.00 (2)   
                                                                                               Exam 1 - Writing HOFs (version 1)                100.00 (3)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
4. Interpreters (Expressions) 1. Write data type for eval (2)                                  MP 2                                             100.00 (2)   
                              2. Write a lifting function (4)                                  MP 2                                             100.00 (4)   
                              3. Write an eval clause from semantics (4)                       MP 2                                             100.00 (4)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
5. Interpreters (Functions)   1. Use eval to create a closure (4)                              MP 2                                             100.00 (4)   
                              2. Use eval to apply a function (4)                              MP 2                                             100.00 (4)   
                              3. Show why closure environment is needed. (2)                   Exam 2 - Closures (v2)                           x 0.00 (0)   
                              4. Show difference between procedure and function (2)            Exam 2 - Procedure vs Function (v3)              100.00 (2)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
6. Lambda Calculus            1. Reduce a lambda-calculus expression (10)                      Exam 1 - Lambda Calculus (v1)                    100.00 (10)  
                                                                                               Lambda Calculus Activity                         100.00 (8)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
7. Evaluation Semantics       3. Show a small step semantics reduction sequence. (5)           Small Step Activity                              100.00 (5)   
                              1. Write a big step semantics proof tree. (3)                    Big Step Activity 2                              x 0.00 (0)   
                                                                                               Exam 1 - Big Step Semantics (v1)                 100.00 (3)   
                              2. Write an eval clause given a big step rule. (2)               MP 2                                             100.00 (2)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
8. Typing Semantics           3. Implement a Type Inferencer (5)                               MP 6                                             84.09 (5)    
                              1. Write a monotype proof tree (5)                               Monotype Proof Tree Activity                     99.38 (5)    
                              2. Write a polytype proof tree (5)                               Polytype Proof Tree Activity                     96.04 (5)    
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
10. Continuations             3. Use Continuations to Alter Flow of a Program (4)              CPS Activity                                     100.00 (4)   
                                                                                               MP 4                                             100.00 (4)   
                              1. Compare tail recursion and continuations (2)                  Exam 2 - CPS and Tail (3d)                       100.00 (1)   
                                                                                               Exam 2 - CPS and Tail (3s)                       100.00 (1)   
                              2. Convert a function into continuation passing style. (8)       MP 3                                             93.75 (4)    
                                                                                               Exam 2 - Write a function in CPS (v2)            100.00 (8)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
11. Type Classes and Monads   1. Implement the Eq or Ord typeclass (2)                         Typeclass Activity                               100.00 (2)   
                              2. Implement the Functor typeclass (2)                           Typeclass Activity                               100.00 (1)   
                                                                                               Exam 2 - Write Functor and Applicative (v2)      100.00 (1)   
                              3. Implement the Applicative typeclass (3)                       Typeclass Activity                               100.00 (1)   
                                                                                               Exam 2 - Write Functor and Applicative (v2)      100.00 (2)   
                              4. Implement the Monad typeclass (3)                             Typeclass Activity                               100.00 (1)   
                                                                                               Exam 2 - Write a Monad (v2)                      100.00 (2)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
12. Grammars                  2. Demonstrate that a grammar is ambiguous (5)                   Ambiguous Grammar Activity (v03)                 100.00 (3)   
                                                                                               Exam 2 - Ambiguous Grammer (v2)                  100.00 (5)   
                              4. Calculate FIRST and FOLLOW sets (5)                           Grammar First/Follow Set Activity (v03)          100.00 (3)   
                                                                                               Exam 2 - Select First and Follow Sets (v2)       x 25.00 (0)  
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
13. Regular Languages         1. Show an equivalent right linear grammar (4)                   Exam 2 - Regular Expression to Right Linear      x 50.00 (0)  
                              2. Given a pattern, provide a regular expression (4)             Regular Languages Activity                       100.00 (4)   
                              3. Indicate limits or capabilities of regular languages (2)      Exam 2 - Select Regular Langauge Capability (v5) 100.00 (1)   
                                                                                               Exam 2 - Select Regular Langauge Capability (v6) 100.00 (1)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
14. LL Parsing                1. Write an LL Parser in Haskell (4)                             Exam 2 - Convert LL Grammar to Haskell (v3)      100.00 (2)   
                                                                                               LL Activity - LL Parser                          100.00 (2)   
                              2. Convert a Grammar to LL (6)                                   LL Activity - LL Conversion                      100.00 (3)   
                                                                                               Exam 2 - Convert Grammar to LL (v3)              100.00 (3)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
15. LR Parsing                1. Identify Location of Shift/Reduce Conflict (3)                Exam 2 - Select Shift/Reduce (v2)                100.00 (3)   
                              2. Identify Significance of Shift/Reduce Conflict (2)            Exam 2 - Produce LR Item Set                     x 0.00 (0)   
                              3. Produce LR Item Sets and Automata (5)                         Exam 2 - Produce LR Item Set                     x 0.00 (0)   
                                                                                               LR Activity                                      98.85 (2)    
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
16. Unification               1. Identify four unification operations (4)                      Unification Operations                           100.00 (4)   
                              2. Solve a  unifcation problem (6)                               Solve Unification v2                             100.00 (2)   
                                                                                               Solve Unification v3                             100.00 (2)   
                                                                                               Solve Unification v1                             100.00 (2)   
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -------------
20. Metaprogramming           1. Write a program that writes a program (10)                    Metaprogramming Activity                         100.00 (10)  
                              2. Implement an interpreter with macros (10)                     MP 5                                             x 0.00 (0)   
